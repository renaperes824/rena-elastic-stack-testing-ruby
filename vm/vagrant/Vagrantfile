# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrant with Ansible configuration
#
# See https://app.vagrantup.com/elastic for boxes available
#
# Author: Liza Dayoub
#
# --

if ! ENV['AIT_ANSIBLE_PLAYBOOK']
    raise Vagrant::Errors::VagrantError.new, "This Vagrantfile requires env: AIT_ANSIBLE_PLAYBOOK to be defined"
end

if ! ENV['AIT_ANSIBLE_ES_VARS']
    raise Vagrant::Errors::VagrantError.new, "This Vagrantfile requires env: AIT_ANSIBLE_ES_VARS to be defined"
end

VAGRANTFILE_API_VERSION = "2"

module OS
  def OS.windows?
    (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
  end
end

$script = <<-SCRIPT
  # update limits
  LINE1="*        hard    nofile          65536"
  LINE2="*        soft    nofile          65536"
  FILE="/etc/security/limits.conf"
  grep -qF "$LINE1" "$FILE" || echo "$LINE1" >> "$FILE"
  grep -qF "$LINE2" "$FILE" || echo "$LINE2" >> "$FILE"

  # update vm map count
  sysctl -w vm.max_map_count=262144
SCRIPT

VAGRANT_DEFAULT_BOX = "elastic/ubuntu-16.04-x86_64"  # To set use env VAGRANT_BOX
VAGRANT_DEFAULT_MEM = "4096"                         # To set use env VAGRANT_MEM
VAGRANT_DEFAULT_CPU = "2"                            # To set use env VAGRANT_CPU

# Host Ports
ELASTICSEARCH_DEFAULT_PORT = 9200
KIBANA_DEFAULT_PORT = 5601

# Guest Ports
ELASTICSEARCH_GUEST_PORT = 9200
KIBANA_GUEST_PORT = 5601

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  if ENV['ES_BUILD_VAGRANT_BOX']
    config.vm.box = ENV['ES_BUILD_VAGRANT_BOX']
  else
    config.vm.box = VAGRANT_DEFAULT_BOX
  end

  if ENV['AIT_ELASTICSEARCH_PORT']
    ELASTICSEARCH_PORT = ENV['AIT_ELASTICSEARCH_PORT']
  else
    ELASTICSEARCH_PORT = ELASTICSEARCH_DEFAULT_PORT
  end

  if ENV['AIT_KIBANA_PORT']
    KIBANA_PORT = ENV['AIT_KIBANA_PORT']
  else
    KIBANA_PORT = KIBANA_DEFAULT_PORT
  end

  config.vm.network :forwarded_port, guest:KIBANA_GUEST_PORT, host:KIBANA_PORT # kibana
  config.vm.network :forwarded_port, guest:ELASTICSEARCH_GUEST_PORT, host:ELASTICSEARCH_PORT # elasticsearch

  config.ssh.insert_key = false

  config.vm.provider :virtualbox do |vb|

    # vb.name = VAGRANT_DEFAULT_BOX_NAME

    if ENV['ES_BUILD_VAGRANT_MEM']
      vb.memory = ENV['ES_BUILD_VAGRANT_MEM']
    else
      vb.memory = VAGRANT_DEFAULT_MEM
    end

    if ENV['ES_BUILD_VAGRANT_CPU']
      vb.cpus = ENV['ES_BUILD_VAGRANT_CPU']
    else
      vb.cpus = VAGRANT_DEFAULT_CPU
    end

  end

  if ! OS.windows?
    config.vm.provision "shell", inline: $script, privileged: true
  end

  # Ansible
  config.vm.provision "ansible" do |ansible|
    ansible_host = "aithost"
    ansible_var_file = ENV['AIT_ANSIBLE_ES_VARS']
    config.vm.define ansible_host
    ansible.extra_vars = {
      "uut" => ansible_host,
      "es_var_file" => ansible_var_file
    }
    ansible.verbose = "v"
    ansible.playbook = ENV['AIT_ANSIBLE_PLAYBOOK']
  end

end
